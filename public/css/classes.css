.form-input {
    background-color: transparent;
    border-bottom: 1px solid white;
    border-top: none;
    border-left: none;
    border-right: none;
    color: white;
    text-align: center;
    font-size: 1rem;
    padding: 0.25em;
}

.form-button {
    background-image: linear-gradient(
        45deg,
        black,
        black,
        black,
        var(--color-main),
        var(--color-main),
        var(--color-main)
    );
    background-size: 300%;
    background-position: left bottom;
    border: 2px solid white;
    color: white;
    padding: 0.75em;
    border-radius: 5px;
    font-weight: 700;
    transition: all 500ms ease-in-out;
}

.form-button:hover {
    background-position: right top;
    cursor: pointer;
}

/*==============================================*/

.form-field {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    /*justify-content: space-between;*/
    flex: 1;
}

.label,
.field-title {
    width: fit-content;
    font-weight: 900;
    font-size: 1.15rem;
    text-transform: capitalize;
    text-wrap: nowrap;
    font-family: var(--font-main);
    text-align: start;
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.5em;
}

.input-wrapper {
    height: 50px;
    display: flex;
    align-items: center;
    gap: 0.25em;
    border: 2px solid var(--color-main);
    border-radius: 10px;
    transition: all 300ms ease-in-out;
    position: relative;
}

.input-wrapper:has(input[type="text"]:hover),
.input-wrapper:has(input[type="password"]:hover) {
    background-color: var(--color-main-transparent);
    border: 2px solid white;
}
.input-wrapper:has(input[type="text"]:focus),
.input-wrapper:has(input[type="text"]:focus-visible),
.input-wrapper:has(input[type="password"]:focus),
.input-wrapper:has(input[type="password"]:focus-visible) {
    background-color: var(--color-main);
    border: 2px solid white;
}

.input-wrapper:has(input:user-invalid) {
    background-color: var(--color-red-transparent);
    border: 2px solid var(--color-red);
}

.input-wrapper:has(input:user-valid) {
    background-color: var(--color-green-transparent);
    border: 2px solid var(--color-green);
}

.input-wrapper:has(input)::after {
    font-style: italic;
    font-size: 0.75rem;
    opacity: 0.9;
    font-weight: 900;
    text-wrap: nowrap;
    position: absolute;
    top: -50%;
    right: 0;
    text-align: end;
    font-family: var(--font-main);
}

.input-wrapper:has(input#firstName:user-invalid)::after,
.input-wrapper:has(input#lastName:user-invalid)::after {
    content: "2-20 Characters.";
    color: var(--color-red);
}

.input-wrapper:has(input#username:user-invalid)::after {
    content: "2-30 Characters.";
    color: var(--color-red);
}

.input-wrapper:has(input#bio:user-invalid)::after {
    content: "5-150 Characters.";
    color: var(--color-red);
}

.input-wrapper:has(input#title:user-invalid)::after {
    content: "3-100 Characters.";
    color: var(--color-red);
}

.input-wrapper:has(input#content:user-invalid)::after {
    content: "5-255 Characters.";
    color: var(--color-red);
}

.input-wrapper:has(input:user-valid)::after {
    content: "Nice!";
    color: var(--color-green);
}

.input-icon {
    font-weight: 900 !important;
    font-size: 2rem !important;
    padding: 0.1em 0.25em !important;
    color: white;
}

.input-field {
    height: 100%;
    font-weight: 900;
    background-color: transparent;
    border: none;
    color: white;
    padding: 0.5em;
    flex: 1;
}

.pass-visibility-button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}

.pass-visibility-button:hover,
.pass-visibility-button:focus,
.pass-visibility-button:focus-visible {
    transform: scale(1.1);
}

.vertical-separator {
    height: 100%;
    min-width: 1px;
    width: 1px;
    background-image: radial-gradient(circle at center, #ffffff33, transparent);
}

.horizontal-separator {
    min-width: 100%;
    min-height: 1px;
    height: 1px;
    background-image: radial-gradient(circle at center, #ffffff33, transparent);
}

.gender-options {
    display: flex;
    gap: 1em;

    .male {
        color: var(--color-male);
    }

    .female {
        color: var(--color-female);
    }
}

.gender-option {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    padding: 0.5em;
    transition: all 300ms ease-in-out;
    border: 2px solid var(--color-main);

    label {
        display: flex;
        flex-direction: column;
        gap: 0.5em;
        text-align: center;
        color: white;
    }

    input[type="radio"] {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
    }
}

.gender-option:hover {
    border: 2px solid white;
}

.gender-option > input {
    cursor: pointer;
}

.gender-option:has(input[type="radio"]:checked) {
    border: 2px solid white;
    animation: ppf-selection 500ms linear;

    > * {
        color: white;
    }
}

.gender-option.male:has(input[type="radio"]:checked) {
    background-color: var(--color-male);
}

.gender-option.female:has(input[type="radio"]:checked) {
    background-color: var(--color-female);
}

.button {
    width: 100%;
    height: 50px;
    padding: 1em;
    border-radius: 10px;
    background-color: transparent;
    border: 2px solid var(--color-main);
    color: white;
    font-weight: 900;
    background-image: linear-gradient(
        90deg,
        transparent,
        transparent,
        transparent,
        transparent,
        var(--color-main),
        var(--color-main),
        var(--color-main),
        var(--color-main)
    );

    background-size: 300%;
    background-position: left bottom;
    transition: all 450ms linear;
}

.button:hover,
.button:focus,
.button:focus-visible {
    background-position: right top;
    cursor: pointer;
}

.option {
    position: relative;
    width: 60px;
    height: 60px;
    background-image: radial-gradient(transparent, var(--color-main));
    box-shadow: 0px 0px 7px 3px var(--color-main);
    background-size: 150%;
    background-position: center;
    border-radius: 50%;
    flex-shrink: 0;
    border: 2px solid transparent;
    transition: all 300ms ease-in-out;

    > * {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    label {
        padding: 0.5em;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 5;

        img {
            width: 100%;
            height: 100%;
        }
    }

    input[type="radio"] {
        opacity: 0;
        z-index: 10;
    }
    input[type="radio"]:hover {
        cursor: pointer;
    }
}

.option:has(input[type="radio"]:checked) {
    border: 2px solid var(--color-green);
    box-shadow:
        0px 0px 5px 1px var(--color-green) inset,
        0px 0px 10px 2px var(--color-green);
    animation: ppf-selection 500ms linear;
    animation-delay: 0ms !important;
    background-image: radial-gradient(
        circle at center,
        transparent,
        var(--color-green)
    );
}

.option:not(:has(input[type="radio"]:checked)):hover {
    transform: scale(1.2);
    background-image: radial-gradient(
        circle at center,
        transparent,
        var(--color-baby-blue)
    );
    box-shadow:
        0px 0px 5px 1px var(--color-baby-blue) inset,
        0px 0px 10px 2px var(--color-baby-blue);
}

.errors {
    padding: 1em 2em;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5em;
    background-color: var(--color-red-transparent);
    border: 1px solid var(--color-red);
    border-radius: 10px;
    font-family: var(--font-main);

    .title {
        font-weight: 900;
        font-size: 1rem;
    }
}
